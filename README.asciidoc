# led_analyzer

Project LED Analyzer 
===================

Subhan Waizi + 
<swaizi@hilscher.com> + 

[[About, About]]
== About   

This document describes the LED Analyzer project which uses TCS3472 Color Sensors for wavelength detection of light emitting diodes. The project is intended to be used in Hilscher's internal
test environment. It provides functionality to be used in an autonomous application and furthermore in Hilscher's muhkuh test frameworks. 


[[Hardware, Hardware]]
== Hardware

The hardware used for this consists of a complete ftdi chip circuit including an eeprom for company specific descriptors. All GPIO pins were used to provide 16 I2C-Interfaces which were connected to 16 of 
AMS TCS3472 Color Sensors.


[[Software, Software]]
== Software 

* An interface to talk to the ftdi chips is provided by libusb v1.0.19 and libftdi v1.2. These libraries
were used to write software based I2C for 16 seperate I2C-busses, which are necessary due to the sensors' unchangable I2C-Address. These functions were made ready for use under LUA
by wrapping them with swigwin v3.0.

* The lua scripts handle all color related functionality, including conversions between color spaces, validating colors and displaying colors in various color spaces.
For automated testing purposes one or more LUA scripts will be provided which will contain dominant wavelengths, brightnesses, satarations and tolerances of the LEDs corresponding to the device under test.
This script can be either generated by an GUI application (CoCo App) or filled in manually.

* The GUI Application called CoCo App will show all connected Led Analyzer Devices and their measured color data, including wavelength saturation and brightness. Furthermore color sensor specific settings
like integration time and gain can be setup easily. The App displays the status of the sensors, giving various information in case problems occur.
Testfile for later use in an automated test environment (e.g. muhkuh test framwork) can be generated here.


A detailled description of drivers, lua scripts and usage of the application will follow.





